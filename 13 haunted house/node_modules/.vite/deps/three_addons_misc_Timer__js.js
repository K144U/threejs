import "./chunk-PZ5AY32C.js";

// node_modules/three/examples/jsm/misc/Timer.js
var Timer = class {
  constructor() {
    this._previousTime = 0;
    this._currentTime = 0;
    this._startTime = now();
    this._delta = 0;
    this._elapsed = 0;
    this._timescale = 1;
    this._usePageVisibilityAPI = typeof document !== "undefined" && document.hidden !== void 0;
    if (this._usePageVisibilityAPI === true) {
      this._pageVisibilityHandler = handleVisibilityChange.bind(this);
      document.addEventListener("visibilitychange", this._pageVisibilityHandler, false);
    }
  }
  getDelta() {
    return this._delta / 1e3;
  }
  getElapsed() {
    return this._elapsed / 1e3;
  }
  getTimescale() {
    return this._timescale;
  }
  setTimescale(timescale) {
    this._timescale = timescale;
    return this;
  }
  reset() {
    this._currentTime = now() - this._startTime;
    return this;
  }
  dispose() {
    if (this._usePageVisibilityAPI === true) {
      document.removeEventListener("visibilitychange", this._pageVisibilityHandler);
    }
    return this;
  }
  update(timestamp) {
    if (this._usePageVisibilityAPI === true && document.hidden === true) {
      this._delta = 0;
    } else {
      this._previousTime = this._currentTime;
      this._currentTime = (timestamp !== void 0 ? timestamp : now()) - this._startTime;
      this._delta = (this._currentTime - this._previousTime) * this._timescale;
      this._elapsed += this._delta;
    }
    return this;
  }
};
var FixedTimer = class extends Timer {
  constructor(fps = 60) {
    super();
    this._delta = 1 / fps * 1e3;
  }
  update() {
    this._elapsed += this._delta * this._timescale;
    return this;
  }
};
function now() {
  return (typeof performance === "undefined" ? Date : performance).now();
}
function handleVisibilityChange() {
  if (document.hidden === false) this.reset();
}
export {
  FixedTimer,
  Timer
};
//# sourceMappingURL=three_addons_misc_Timer__js.js.map
